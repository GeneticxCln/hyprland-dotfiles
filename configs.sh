#!/bin/bash

# Configuration Creation Functions
# This file contains functions to create theme-specific configuration files

# Create Hyprland configuration
create_hyprland_config() {
    local bg="$1"
    local surface0="$2" 
    local accent="$3"
    local accent2="$4"
    local text="$5"
    
    cat > "$HOME/.config/hypr/hyprland.conf" << EOF
# Hyprland Configuration - ${THEME_CHOICE}
# Generated by Hyprland Dotfiles Setup Script

# Monitor configuration
monitor=,preferred,auto,1

# Autostart applications
exec-once = waybar
exec-once = dunst
exec-once = swww-daemon
exec-once = quickshell
exec-once = nm-applet
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = swww img ~/Pictures/Wallpapers/default.jpg

# Environment variables
env = XCURSOR_SIZE,24
env = QT_QPA_PLATFORMTHEME,qt6ct
env = GDK_BACKEND,wayland,x11,*
env = SDL_VIDEODRIVER,wayland
env = CLUTTER_BACKEND,wayland

# Input configuration
input {
    kb_layout = us
    kb_variant = 
    kb_model =
    kb_options =
    kb_rules =
    follow_mouse = 1
    touchpad {
        natural_scroll = true
        disable_while_typing = true
        tap-to-click = true
    }
    sensitivity = 0
    accel_profile = flat
}

# General settings
general {
    gaps_in = 8
    gaps_out = 15
    border_size = 2
    col.active_border = ${accent}ff ${accent2}ff 45deg
    col.inactive_border = rgba(6c708680)
    layout = dwindle
    allow_tearing = false
    resize_on_border = true
}

# Decoration
decoration {
    rounding = 12
    blur {
        enabled = true
        size = 6
        passes = 3
        new_optimizations = true
        xray = true
        noise = 0.01
        contrast = 1.1
        brightness = 1.2
        vibrancy = 0.2
    }
    drop_shadow = true
    shadow_range = 20
    shadow_render_power = 3
    col.shadow = rgba(0000002A)
    shadow_offset = 0, 8
    
    # Dim inactive windows
    dim_inactive = false
    dim_strength = 0.1
}

# Animations
animations {
    enabled = true
    bezier = wind, 0.05, 0.9, 0.1, 1.05
    bezier = winIn, 0.1, 1.1, 0.1, 1.1
    bezier = winOut, 0.3, -0.3, 0, 1
    bezier = liner, 1, 1, 1, 1
    
    animation = windows, 1, 6, wind, slide
    animation = windowsIn, 1, 6, winIn, slide
    animation = windowsOut, 1, 5, winOut, slide
    animation = windowsMove, 1, 5, wind, slide
    animation = border, 1, 1, liner
    animation = borderangle, 1, 30, liner, loop
    animation = fade, 1, 10, default
    animation = workspaces, 1, 5, wind
    animation = specialWorkspace, 1, 6, wind, slidevert
}

# Layout configuration
dwindle {
    pseudotile = true
    preserve_split = true
    smart_split = true
    smart_resizing = true
}

master {
    new_is_master = true
    new_on_top = false
    mfact = 0.5
}

# Gestures
gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 3
    workspace_swipe_distance = 200
    workspace_swipe_invert = true
    workspace_swipe_min_speed_to_force = 30
    workspace_swipe_cancel_ratio = 0.5
    workspace_swipe_create_new = true
    workspace_swipe_forever = true
}

# Group configuration
group {
    col.border_active = ${accent}ff
    col.border_inactive = rgba(6c708680)
    col.border_locked_active = ${accent2}ff
    col.border_locked_inactive = rgba(6c708680)
    
    groupbar {
        render_titles = true
        font_family = JetBrainsMono Nerd Font
        font_size = 10
        gradients = true
        col.active = ${accent}ff
        col.inactive = rgba(6c708680)
    }
}

# Misc settings
misc {
    disable_hyprland_logo = true
    disable_splash_rendering = true
    mouse_move_enables_dpms = true
    key_press_enables_dpms = true
    always_follow_on_dnd = true
    layers_hog_keyboard_focus = true
    animate_manual_resizes = false
    animate_mouse_windowdragging = false
    enable_swallow = true
    swallow_regex = ^(kitty|alacritty|Alacritty)$
    focus_on_activate = false
    no_direct_scanout = true
}

# Window rules
windowrulev2 = suppressevent maximize, class:.*
windowrulev2 = float,class:^(pavucontrol)$
windowrulev2 = float,class:^(nm-connection-editor)$
windowrulev2 = float,class:^(blueman-manager)$
windowrulev2 = float,class:^(org.kde.polkit-kde-authentication-agent-1)$
windowrulev2 = float,class:^(wlogout)$
windowrulev2 = fullscreen,class:^(wlogout)$

# Picture-in-picture
windowrulev2 = float, title:^(Picture-in-Picture)$
windowrulev2 = pin, title:^(Picture-in-Picture)$
windowrulev2 = move 69.5% 4%, title:^(Picture-in-Picture)$
windowrulev2 = size 30% 30%, title:^(Picture-in-Picture)$

# Keybindings
\$mainMod = SUPER

# Applications
bind = \$mainMod, RETURN, exec, kitty
bind = \$mainMod SHIFT, RETURN, exec, alacritty
bind = \$mainMod, Q, killactive
bind = \$mainMod, M, exit
bind = \$mainMod, E, exec, thunar
bind = \$mainMod, V, togglefloating
bind = \$mainMod, SPACE, exec, rofi -show drun
bind = \$mainMod, R, exec, rofi -show run
bind = \$mainMod, P, pseudo
bind = \$mainMod, J, togglesplit
bind = \$mainMod, F, fullscreen
bind = \$mainMod, T, togglegroup
bind = \$mainMod SHIFT, T, changegroupactive

# Screenshots
bind = , Print, exec, hyprshot -m region --clipboard-only
bind = \$mainMod, Print, exec, hyprshot -m output --clipboard-only
bind = \$mainMod SHIFT, Print, exec, hyprshot -m window --clipboard-only

# Media keys
bindel = , XF86AudioRaiseVolume, exec, pamixer -i 5
bindel = , XF86AudioLowerVolume, exec, pamixer -d 5
bindl = , XF86AudioMute, exec, pamixer -t
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPrev, exec, playerctl previous

# Brightness controls
bindel = , XF86MonBrightnessUp, exec, brightnessctl set 10%+
bindel = , XF86MonBrightnessDown, exec, brightnessctl set 10%-

# Move focus with mainMod + arrow keys
bind = \$mainMod, left, movefocus, l
bind = \$mainMod, right, movefocus, r
bind = \$mainMod, up, movefocus, u
bind = \$mainMod, down, movefocus, d

# Move focus with mainMod + vim keys
bind = \$mainMod, h, movefocus, l
bind = \$mainMod, l, movefocus, r
bind = \$mainMod, k, movefocus, u
bind = \$mainMod, j, movefocus, d

# Move windows with mainMod + SHIFT + arrow keys
bind = \$mainMod SHIFT, left, movewindow, l
bind = \$mainMod SHIFT, right, movewindow, r
bind = \$mainMod SHIFT, up, movewindow, u
bind = \$mainMod SHIFT, down, movewindow, d

# Move windows with mainMod + SHIFT + vim keys
bind = \$mainMod SHIFT, h, movewindow, l
bind = \$mainMod SHIFT, l, movewindow, r
bind = \$mainMod SHIFT, k, movewindow, u
bind = \$mainMod SHIFT, j, movewindow, d

# Resize windows with mainMod + CTRL + arrow keys
binde = \$mainMod CTRL, left, resizeactive, -10 0
binde = \$mainMod CTRL, right, resizeactive, 10 0
binde = \$mainMod CTRL, up, resizeactive, 0 -10
binde = \$mainMod CTRL, down, resizeactive, 0 10

# Switch workspaces with mainMod + [0-9]
bind = \$mainMod, 1, workspace, 1
bind = \$mainMod, 2, workspace, 2
bind = \$mainMod, 3, workspace, 3
bind = \$mainMod, 4, workspace, 4
bind = \$mainMod, 5, workspace, 5
bind = \$mainMod, 6, workspace, 6
bind = \$mainMod, 7, workspace, 7
bind = \$mainMod, 8, workspace, 8
bind = \$mainMod, 9, workspace, 9
bind = \$mainMod, 0, workspace, 10

# Move active window to workspace with mainMod + SHIFT + [0-9]
bind = \$mainMod SHIFT, 1, movetoworkspace, 1
bind = \$mainMod SHIFT, 2, movetoworkspace, 2
bind = \$mainMod SHIFT, 3, movetoworkspace, 3
bind = \$mainMod SHIFT, 4, movetoworkspace, 4
bind = \$mainMod SHIFT, 5, movetoworkspace, 5
bind = \$mainMod SHIFT, 6, movetoworkspace, 6
bind = \$mainMod SHIFT, 7, movetoworkspace, 7
bind = \$mainMod SHIFT, 8, movetoworkspace, 8
bind = \$mainMod SHIFT, 9, movetoworkspace, 9
bind = \$mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = \$mainMod, mouse_down, workspace, e+1
bind = \$mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = \$mainMod, mouse:272, movewindow
bindm = \$mainMod, mouse:273, resizewindow

# Special workspace (scratchpad)
bind = \$mainMod, S, togglespecialworkspace, magic
bind = \$mainMod SHIFT, S, movetoworkspace, special:magic

# Power menu
bind = \$mainMod, Escape, exec, wlogout
bind = \$mainMod SHIFT, Escape, exec, systemctl poweroff
EOF
}

# Create Waybar configuration with theme
create_waybar_config() {
    local theme="$1"
    local bg="$2"
    local surface0="$3"
    local text="$4"
    local accent="$5"
    
    # Convert hex colors for CSS
    local bg_rgba="rgba($(printf "%d, %d, %d" 0x${bg:1:2} 0x${bg:3:2} 0x${bg:5:2}), 0.9)"
    local surface0_rgba="rgba($(printf "%d, %d, %d" 0x${surface0:1:2} 0x${surface0:3:2} 0x${surface0:5:2}), 0.8)"
    
    # Waybar config
    cat > "$HOME/.config/waybar/config.jsonc" << EOF
{
    "layer": "top",
    "position": "top",
    "height": 40,
    "spacing": 8,
    "margin-top": 8,
    "margin-left": 12,
    "margin-right": 12,
    "modules-left": ["hyprland/workspaces", "hyprland/window"],
    "modules-center": ["clock"],
    "modules-right": ["custom/media", "pulseaudio", "network", "battery", "custom/power", "tray"],
    
    "hyprland/workspaces": {
        "disable-scroll": true,
        "all-outputs": true,
        "format": "{icon}",
        "format-icons": {
            "1": "󰲠",
            "2": "󰲢",
            "3": "󰲤",
            "4": "󰲦",
            "5": "󰲨",
            "6": "󰲪",
            "7": "󰲬",
            "8": "󰲮",
            "9": "󰲰",
            "10": "󰿬",
            "urgent": "",
            "focused": "",
            "default": ""
        },
        "persistent_workspaces": {
            "*": 5
        }
    },
    
    "hyprland/window": {
        "format": "{}",
        "max-length": 50,
        "separate-outputs": true
    },
    
    "clock": {
        "timezone": "UTC",
        "tooltip-format": "<big>{:%Y %B}</big>\\n<tt><small>{calendar}</small></tt>",
        "format": "{:%H:%M}",
        "format-alt": "{:%Y-%m-%d}"
    },
    
    "battery": {
        "states": {
            "warning": 30,
            "critical": 15
        },
        "format": "{capacity}% {icon}",
        "format-charging": "{capacity}% 󰂄",
        "format-plugged": "{capacity}% ",
        "format-alt": "{time} {icon}",
        "format-icons": ["󰁺", "󰁻", "󰁼", "󰁽", "󰁾", "󰁿", "󰂀", "󰂁", "󰂂", "󰁹"]
    },
    
    "network": {
        "format-wifi": "{essid} ({signalStrength}%) 󰤨",
        "format-ethernet": "Connected 󰈀",
        "tooltip-format": "{ifname} via {gwaddr} 󰈀",
        "format-linked": "{ifname} (No IP) 󰈀",
        "format-disconnected": "Disconnected ⚠",
        "format-alt": "{ifname}: {ipaddr}/{cidr}",
        "on-click-right": "nm-connection-editor"
    },
    
    "pulseaudio": {
        "format": "{volume}% {icon} {format_source}",
        "format-bluetooth": "{volume}% {icon} {format_source}",
        "format-bluetooth-muted": " {icon} {format_source}",
        "format-muted": " {format_source}",
        "format-source": "{volume}% ",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "default": ["", "", ""]
        },
        "on-click": "pavucontrol",
        "on-scroll-up": "pamixer -i 5",
        "on-scroll-down": "pamixer -d 5",
        "smooth-scrolling-threshold": 1
    },
    
    "custom/media": {
        "format": "{icon} {}",
        "return-type": "json",
        "max-length": 40,
        "format-icons": {
            "spotify": "",
            "default": "🎵"
        },
        "escape": true,
        "exec": "\$HOME/.config/waybar/scripts/mediaplayer.py 2> /dev/null",
        "on-click": "playerctl play-pause"
    },
    
    "custom/power": {
        "format": "⏻",
        "tooltip": false,
        "on-click": "wlogout"
    },
    
    "tray": {
        "spacing": 10
    }
}
EOF

    # Waybar CSS with theme colors
    cat > "$HOME/.config/waybar/style.css" << EOF
* {
    border: none;
    border-radius: 0;
    font-family: "JetBrainsMono Nerd Font";
    font-weight: bold;
    font-size: 13px;
    min-height: 0;
}

window#waybar {
    background: $bg_rgba;
    color: $text;
    border-radius: 12px;
    border: 2px solid ${accent}40;
    backdrop-filter: blur(10px);
}

#workspaces {
    background: $surface0_rgba;
    margin: 5px 5px 5px 10px;
    padding: 0px 8px;
    border-radius: 10px;
    color: $text;
    border: 1px solid ${accent}30;
}

#workspaces button {
    padding: 6px 12px;
    border-radius: 8px;
    margin-right: 6px;
    margin-top: 2px;
    margin-bottom: 2px;
    color: ${text}80;
    background: transparent;
    transition: all 0.3s cubic-bezier(0.55, -0.68, 0.48, 1.68);
    border: 1px solid transparent;
}

#workspaces button.active {
    color: $accent;
    background: ${accent}20;
    border: 1px solid ${accent}60;
    transform: scale(1.05);
}

#workspaces button:hover {
    background: ${accent}15;
    color: $accent;
    border: 1px solid ${accent}40;
    transform: scale(1.02);
}

#workspaces button.urgent {
    background: #f38ba820;
    color: #f38ba8;
    border: 1px solid #f38ba860;
}

#window {
    background: $surface0_rgba;
    padding: 6px 16px;
    margin: 5px 0px;
    border-radius: 10px;
    color: $text;
    border: 1px solid ${accent}30;
    font-weight: normal;
}

#clock {
    background: ${accent}90;
    color: $bg;
    padding: 6px 16px;
    margin: 5px 0px;
    border-radius: 10px;
    font-weight: bold;
    border: 1px solid ${accent}aa;
}

#battery,
#network,
#pulseaudio,
#custom-media,
#custom-power,
#tray {
    background: $surface0_rgba;
    padding: 6px 14px;
    margin: 5px 2px 5px 0px;
    border-radius: 10px;
    color: $text;
    border: 1px solid ${accent}30;
}

#battery.charging {
    color: #a6e3a1;
    background: #a6e3a120;
    border-color: #a6e3a140;
}

#battery.warning:not(.charging) {
    color: #f9e2af;
    background: #f9e2af20;
    border-color: #f9e2af40;
}

#battery.critical:not(.charging) {
    color: #f38ba8;
    background: #f38ba820;
    border-color: #f38ba840;
    animation: blink 0.5s linear infinite alternate;
}

@keyframes blink {
    to {
        background-color: #f38ba8;
        color: $bg;
    }
}

#network.disconnected {
    color: #f38ba8;
    background: #f38ba820;
    border-color: #f38ba840;
}

#pulseaudio.muted {
    color: #f38ba8;
    background: #f38ba820;
    border-color: #f38ba840;
}

#custom-power {
    color: #f38ba8;
    background: #f38ba815;
    border-color: #f38ba840;
    font-size: 15px;
    margin-right: 10px;
}

#custom-power:hover {
    background: #f38ba830;
    transform: scale(1.05);
}

#custom-media {
    background: ${accent}15;
    color: $accent;
    border-color: ${accent}40;
    min-width: 100px;
}

#tray {
    margin: 5px 10px 5px 0px;
}

#tray > .passive {
    -gtk-icon-effect: dim;
}

#tray > .needs-attention {
    -gtk-icon-effect: highlight;
    background-color: ${accent}30;
}

tooltip {
    background: $bg;
    border: 2px solid $accent;
    border-radius: 10px;
    color: $text;
}

tooltip label {
    color: $text;
}
EOF

    # Create media player script
    mkdir -p "$HOME/.config/waybar/scripts"
    cat > "$HOME/.config/waybar/scripts/mediaplayer.py" << 'EOF'
#!/usr/bin/env python3
import json
import subprocess
import sys

try:
    # Get player status
    status = subprocess.run(['playerctl', 'status'], capture_output=True, text=True).stdout.strip()
    
    if status in ['Playing', 'Paused']:
        # Get metadata
        artist = subprocess.run(['playerctl', 'metadata', 'artist'], capture_output=True, text=True).stdout.strip()
        title = subprocess.run(['playerctl', 'metadata', 'title'], capture_output=True, text=True).stdout.strip()
        
        # Format output
        text = f"{artist} - {title}" if artist and title else title if title else "Unknown"
        
        # Truncate if too long
        if len(text) > 40:
            text = text[:37] + "..."
            
        output = {
            "text": text,
            "tooltip": f"{artist} - {title}" if artist and title else title,
            "class": "playing" if status == "Playing" else "paused",
            "alt": status.lower()
        }
        
        print(json.dumps(output))
    else:
        print("")
        
except Exception:
    print("")
EOF
    chmod +x "$HOME/.config/waybar/scripts/mediaplayer.py"
}

# I'll create more functions in separate files to keep it organized
# This is getting quite long - shall I continue with the other configuration functions?
